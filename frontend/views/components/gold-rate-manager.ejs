<!-- Gold & Silver Rate Manager Component -->


<!-- Bootstrap CSS (include if not already included) -->
<link href="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/css/bootstrap.min.css" rel="stylesheet">
<link href="https://cdnjs.cloudflare.com/ajax/libs/font-awesome/6.4.0/css/all.min.css" rel="stylesheet">

<!-- Current Precious Metals Rate Display (for main page) -->
<section class="py-5 bg-white">
  <div class="container">
    <div class="text-center mb-5">
      <h2 class="section-title mb-3" data-en="Current Metal Rates" data-hi="वर्तमान धातु दरें">Current Metal Rates</h2>
      <div class="title-underline mx-auto"></div>
    </div>
    <div class="precious-metals-display">
                <!-- Refresh Button -->
                <button class="refresh-btn" onclick="refreshMainRates()" id="mainRefreshBtn" title="Refresh Rates">
                    <i class="fas fa-sync-alt"></i>
                </button>
                
                <div class="row text-center g-4">
                    <div class="col-lg-6 mb-3 mb-lg-0">
                        <div class="border-end border-warning border-2 pe-3">
                            <h6 class="text-muted mb-2">
                            <i class="fas fa-coins me-2"></i>
                            <span class="lang" data-en="Gold Rate (10g)" data-hi="सोने की दर (10 ग्राम)">
                                Gold Rate (10g)
                            </span>
                            </h6>
                            <div class="metal-rate-value" id="websiteGoldRate">₹ 0.00</div>
                            <small class="text-muted" id="goldSource">Source: Not Set</small>
                            <div>
                                <small class="text-muted">
                                    <span class="lang" 
                                            data-en="Includes ~ Import Duty -12.5%, GST- 3%, Retailer Margin- 2%" 
                                            data-hi="शामिल ~ आयात शुल्क -12.5%, जीएसटी - 3%, रिटेलर मार्जिन - 2%">
                                        Includes ~ Import Duty -12.5%, GST- 3%, Retailer Margin- 2%
                                    </span>
                                    <br>
                                    <strong>
                                        <span class="lang" data-en="Total: 17.5%" data-hi="कुल: 17.5%">
                                        Total: 17.5%
                                        </span>
                                    </strong>
                                    </small>
                                
                            </div>
                           

                        </div>
                    </div>
                    <div class="col-lg-6">
                        <div class="ps-lg-3">
                            <h6 class="text-muted mb-2">
                            <i class="fas fa-medal me-2"></i>
                            <span class="lang" data-en="Silver Rate (10g)" data-hi="चांदी की दर (10 ग्राम)">
                                Silver Rate (10g)
                            </span>
                            </h6>
                            <div class="silver-rate-value" id="websiteSilverRate">₹ 0.00</div>
                            <small class="text-muted" id="silverSource">Source: Not Set</small>
                            <div>
                                <small class="text-muted">
                                    <span class="lang" 
                                            data-en="Includes ~ Import Duty -7.5%, GST- 3%, Retailer Margin- 1-5%" 
                                            data-hi="शामिल ~ आयात शुल्क -7.5%, जीएसटी - 3%, रिटेलर मार्जिन - 1-5%">
                                        Includes ~ Import Duty -7.5%, GST- 3%, Retailer Margin- 1-5%
                                    </span>
                                    <br>
                                    <strong>
                                        <span class="lang" data-en="Total: 10.5-15.5%" data-hi="कुल: 10.5-15.5%">
                                        Total: 10.5-15.5%
                                        </span>
                                    </strong>
                                    </small>

                            </div>
                        </div>
                    </div>
                </div>
            </div>
    </div>
</section>

<!-- Metals Manager Button removed - now integrated into main FAB -->


<!-- Bootstrap Modal Backdrop for Sidebar -->
<div class="modal-backdrop fade" id="sidebarBackdrop" style="display: none;" onclick="closeMetalsManager()"></div>

<!-- Precious Metals Rate Management Sidebar -->
<div class="metals-sidebar" id="metalsSidebar">
    <div class="sidebar-header p-4">
        <div class="d-flex justify-content-between align-items-center">
            <div>
                <h4 class="mb-1 fw-bold">
                    <i class="fas fa-coins me-2"></i>Precious Metals Manager
                </h4>
                <small>Manage gold and silver rates for your store</small>
            </div>
            <button type="button" class="btn-close btn-close-dark" onclick="closeMetalsManager()"></button>
        </div>
    </div>

    <div class="p-4">
        <!-- Navigation Tabs -->
        <ul class="nav nav-pills nav-justified mb-4" id="metalsRateTabs" role="tablist">
            <li class="nav-item" role="presentation">
                <button class="nav-link active" id="admin-tab" data-bs-toggle="pill" data-bs-target="#admin-panel" type="button">
                <i class="fas fa-cog me-1"></i>
                <span >Admin Panel</span>
                </button>

            </li>
            <li class="nav-item" role="presentation">
                <button class="nav-link" id="client-tab" data-bs-toggle="pill" data-bs-target="#client-view" type="button" role="tab">
                    <i class="fas fa-eye me-1"></i>Client View
                </button>
            </li>
        </ul>

        <!-- Tab Content -->
        <div class="tab-content" id="metalsRateTabContent">
            <!-- Admin Panel Tab -->
            <div class="tab-pane fade show active" id="admin-panel" role="tabpanel">
                <!-- Metal Selection -->
                <div class="mb-4">
                    <label class="form-label fw-semibold">Select Metal</label>
                    <div class="btn-group w-100" role="group">
                        <input type="radio" class="btn-check" name="metalType" id="goldRadio" value="gold" checked>
                        <label class="btn btn-outline-warning" for="goldRadio">
                            <i class="fas fa-coins me-1"></i>Gold
                        </label>
                        
                        <input type="radio" class="btn-check" name="metalType" id="silverRadio" value="silver">
                        <label class="btn btn-outline-secondary" for="silverRadio">
                            <i class="fas fa-medal me-1"></i>Silver
                        </label>
                    </div>
                </div>

                <!-- Admin Sub-tabs -->
                <ul class="nav nav-tabs mb-4" id="adminSubTabs" role="tablist">
                    <li class="nav-item" role="presentation">
                        <button class="nav-link active" id="manual-tab" data-bs-toggle="tab" data-bs-target="#manual-entry" type="button" role="tab">
                            <i class="fas fa-edit me-1"></i>Manual Entry
                        </button>
                    </li>
                    <li class="nav-item" role="presentation">
                        <button class="nav-link" id="api-tab" data-bs-toggle="tab" data-bs-target="#api-integration" type="button" role="tab">
                            <i class="fas fa-cloud me-1"></i>API Integration
                        </button>
                    </li>
                </ul>

                <div class="tab-content" id="adminSubTabContent">
                    <!-- Manual Entry -->
                    <div class="tab-pane fade show active" id="manual-entry" role="tabpanel">
                        <div class="card border-warning">
                            <div class="card-body">
                                <div class="mb-3">
                                    <label for="metalRate" class="form-label fw-semibold">
                                        <i class="fas fa-rupee-sign me-1"></i>
                                        <span id="metalTypeLabel">Gold</span> Rate (per gram in ₹)
                                    </label>
                                    <input type="number" class="form-control" id="metalRate" placeholder="Enter rate per gram" step="0.01" min="0">
                                </div>
                                <button class="btn btn-warning w-100" onclick="setManualRate()">
                                <i class="fas fa-save me-2"></i>
                                <span class="lang" data-en="Set Gold Rate" data-hi="सोने की दर सेट करें">Set Gold Rate</span>
                                </button>

                            </div>
                        </div>
                    </div>

                    <!-- API Integration -->
                    <div class="tab-pane fade" id="api-integration" role="tabpanel">
                        <div class="card border-info">
                            <div class="card-body">
                                <div class="alert alert-info" role="alert">
                                    <i class="fas fa-info-circle me-2"></i>
                                    <strong>API Integration:</strong> Fetches live precious metal rates from goldapi.io.
                                </div>
                                
                                <div class="mb-3">
                                    <label for="apiKey" class="form-label fw-semibold">
                                        <i class="fas fa-key me-1"></i>API Key (goldapi.io)
                                    </label>
                                    <input type="text" class="form-control" id="apiKey" placeholder="Enter your API key" value="goldapi-3myugsmdsfpzv2-io">
                                </div>
                                
                                <div class="mb-3">
                                    <label for="currency" class="form-label fw-semibold">
                                        <i class="fas fa-money-bill-wave me-1"></i>Currency
                                    </label>
                                    <select class="form-select" id="currency">
                                        <option value="INR" selected>Indian Rupee (INR)</option>
                                        <option value="USD">US Dollar (USD)</option>
                                    </select>
                                </div>
                                
                                <div class="d-grid gap-2">
                                    <button class="btn btn-outline-warning" onclick="fetchAPIRate('gold')" id="fetchGoldBtn">
                                        <i class="fas fa-download me-2"></i>Fetch Gold Rate
                                    </button>
                                    <button class="btn btn-outline-secondary" onclick="fetchAPIRate('silver')" id="fetchSilverBtn">
                                        <i class="fas fa-download me-2"></i>Fetch Silver Rate
                                    </button>
                                </div>
                            </div>
                        </div>
                    </div>
                </div>

                <div id="adminMessage" class="mt-3"></div>
            </div>

            <!-- Client View Tab -->
            <div class="tab-pane fade" id="client-view" role="tabpanel">
                <div class="row g-3">
                    <!-- Gold Display -->
                    <div class="col-md-6">
                        <div class="card border-warning">
                            <div class="card-body text-center">
                                <h6 class="card-title text-warning">
                                    <i class="fas fa-coins me-2"></i>Gold Rate (10g)
                                </h6>
                                <div class="display-rate-value my-3" id="clientGoldRate">₹ 0.00</div>
                                <div class="badge bg-warning text-dark mb-2" id="clientGoldSource">Source: Not Set</div>
                                <div class="text-muted small" id="clientGoldUpdated">Last updated: Never</div>
                            </div>
                        </div>
                    </div>
                    
                    <!-- Silver Display -->
                    <div class="col-md-6">
                        <div class="card border-secondary">
                            <div class="card-body text-center">
                                <h6 class="card-title text-secondary">
                                    <i class="fas fa-medal me-2"></i>Silver Rate (10g)
                                </h6>
                                <div class="display-silver-value my-3" id="clientSilverRate">₹ 0.00</div>
                                <div class="badge bg-secondary mb-2" id="clientSilverSource">Source: Not Set</div>
                                <div class="text-muted small" id="clientSilverUpdated">Last updated: Never</div>
                            </div>
                        </div>
                    </div>
                </div>
                
                <div class="text-center mt-4">
                    <button class="btn btn-outline-primary" onclick="refreshClientRates()">
                        <i class="fas fa-sync-alt me-2"></i>Refresh All Rates
                    </button>
                </div>
                
                <div id="clientMessage" class="mt-3"></div>
            </div>
        </div>
    </div>
</div>

<!-- Bootstrap JS (include if not already included) -->
<script src="https://cdnjs.cloudflare.com/ajax/libs/bootstrap/5.3.0/js/bootstrap.bundle.min.js"></script>

<script>
    // Metals rate data storage (initial load from localStorage or default)
    let metalsData = JSON.parse(localStorage.getItem('metalsData')) || {
        gold: {
            ratePerGram: 0,
            lastUpdated: null,
            source: 'Not Set'
        },
        silver: {
            ratePerGram: 0,
            lastUpdated: null,
            source: 'Not Set'
        }
    };

    function saveToLocalStorage() {
        localStorage.setItem('metalsData', JSON.stringify(metalsData));
    }

    function openMetalsManager() {
        document.getElementById('metalsSidebar').classList.add('show');
        document.getElementById('sidebarBackdrop').style.display = 'block';
        setTimeout(() => {
            document.getElementById('sidebarBackdrop').classList.add('show');
        }, 10);
    }

    function closeMetalsManager() {
        document.getElementById('metalsSidebar').classList.remove('show');
        document.getElementById('sidebarBackdrop').classList.remove('show');
        setTimeout(() => {
            document.getElementById('sidebarBackdrop').style.display = 'none';
        }, 300);
        updateWebsiteRates();
    }

   async function refreshMainRates() {
    const btn = document.getElementById('mainRefreshBtn');
    btn.classList.add('loading');

    // Keep your old behavior
    updateWebsiteRates();
    fetchAPIRate('gold');
    fetchAPIRate('silver');

    // Also trigger backend refresh
    try {
        const res = await fetch('/api/metal-rates/refresh', { method: 'POST' });
        const data = await res.json();

        if (data.success) {
            console.log('Rates updated on server');
        } else {
            console.warn('Server refresh failed');
        }
    } catch (err) {
        console.error('Error refreshing rates on server:', err);
    }

    setTimeout(() => btn.classList.remove('loading'), 1000);
}


    // In your client-side script
async function saveRateToServer(metalType, ratePerGram, source) {
  try {
    const response = await fetch('/api/metal-rates', {
      method: 'POST',
      headers: { 'Content-Type': 'application/json' },
      body: JSON.stringify({ metalType, ratePerGram, source })
    });
    return await response.json();
  } catch (error) {
    console.error('Error saving rate:', error);
    return { success: false };
  }
}

    function setManualRate() {
        const selectedMetal = document.querySelector('input[name="metalType"]:checked').value;
        const rateInput = document.getElementById('metalRate');
        const rate = parseFloat(rateInput.value);

        if (isNaN(rate) || rate <= 0) {
            showBootstrapAlert('adminMessage', 'Please enter a valid rate greater than 0', 'danger');
            return;
        }

        metalsData[selectedMetal].ratePerGram = rate;
        metalsData[selectedMetal].lastUpdated = new Date();
        metalsData[selectedMetal].source = 'Manual Entry';

        saveToLocalStorage();

        const metalName = selectedMetal.charAt(0).toUpperCase() + selectedMetal.slice(1);
        showBootstrapAlert('adminMessage', `${metalName} rate set successfully: ₹${rate.toFixed(2)} per gram`, 'success');
        rateInput.value = '';
        updateWebsiteRates();
            saveRateToServer(selectedMetal, rate, 'Manual Entry')
        .then(data => {
        if (data.success) {
            showBootstrapAlert('adminMessage', `${metalName} rate saved to server!`, 'success');
        }
    });
    }

    async function fetchAPIRate(metal) {
        const apiKey = document.getElementById('apiKey').value.trim();
        const currency = document.getElementById('currency').value;
        const btnId = metal === 'gold' ? 'fetchGoldBtn' : 'fetchSilverBtn';
        const fetchBtn = document.getElementById(btnId);

        if (!apiKey) {
            showBootstrapAlert('adminMessage', 'Please enter your API key', 'danger');
            return;
        }

        const symbol = metal === 'gold' ? 'XAU' : 'XAG';
        const originalText = fetchBtn.innerHTML;

        fetchBtn.disabled = true;
        fetchBtn.innerHTML = `<span class="loading"></span> Fetching ${metal}...`;

        try {
            const response = await fetch(`https://www.goldapi.io/api/${symbol}/${currency}`, {
                method: 'GET',
                headers: {
                    'x-access-token': apiKey,
                    'Content-Type': 'application/json'
                }
            });

            if (!response.ok) throw new Error(`HTTP ${response.status}: Failed to fetch data`);

            const data = await response.json();
            if (!data.price) throw new Error('Invalid response format from goldapi.io');

            const pricePerGram = data.price / 31.1035;

            metalsData[metal].ratePerGram = pricePerGram;
            metalsData[metal].lastUpdated = new Date();
            metalsData[metal].source = `API (goldapi.io) - ${currency}`;

            saveToLocalStorage();

            const metalName = metal.charAt(0).toUpperCase() + metal.slice(1);
            const currencySymbol = currency === 'INR' ? '₹' : '$';

            showBootstrapAlert('adminMessage',
                `<strong>${metalName} rate fetched successfully!</strong><br>
                ${currencySymbol}${pricePerGram.toFixed(2)} per gram<br>
                <small class="text-muted">Source: goldapi.io | Per Ounce: ${currencySymbol}${data.price.toFixed(2)}</small>`,
                'success');

            updateWebsiteRates();

        } catch (error) {
            let errorMessage = error.message;
            if (error.message.includes('401')) {
                errorMessage = 'Invalid API key. Please check your goldapi.io API key.';
            } else if (error.message.includes('403')) {
                errorMessage = 'Access forbidden. Please check your API key permissions.';
            }

            const metalName = metal.charAt(0).toUpperCase() + metal.slice(1);
            showBootstrapAlert('adminMessage',
                `<strong>Failed to fetch ${metalName} rate:</strong><br>
                ${errorMessage}<br>
                <small class="text-muted">Get a free API key from <a href="https://goldapi.io" target="_blank">goldapi.io</a></small>`,
                'danger');
        } finally {
            fetchBtn.disabled = false;
            fetchBtn.innerHTML = originalText;
        }
        saveRateToServer(metal, pricePerGram, `API (goldapi.io) - ${currency}`)
    .then(data => {
      if (data.success) {
        // Update success message
      }
    });
    }

    function refreshClientRates() {
        updateClientView();
        showBootstrapAlert('clientMessage', 'All rates refreshed successfully!', 'success');
    }

   function updateWebsiteRates() {
    const gold = metalsData.gold;
    const silver = metalsData.silver;

    // 🔹 Gold
    let goldRate10g = gold.ratePerGram * 10;
    let goldTotal = goldRate10g;

    // If source is API → Add GST
    if (gold.source && gold.source.startsWith("API")) {
        const goldGST = goldRate10g * 0.03; // GST 3%
        goldTotal += goldGST;
    }

    document.getElementById('websiteGoldRate').innerHTML = `₹ ${goldTotal.toFixed(2)}`;
    document.getElementById('goldSource').textContent = `Source: ${gold.source}`;

    // 🔹 Silver
    let silverRate10g = silver.ratePerGram * 10;
    let silverTotal = silverRate10g;

    // If source is API → Add GST
    if (silver.source && silver.source.startsWith("API")) {
        const silverGST = silverRate10g * 0.03; // GST 3%
        silverTotal += silverGST;
    }

    document.getElementById('websiteSilverRate').innerHTML = `₹ ${silverTotal.toFixed(2)}`;
    document.getElementById('silverSource').textContent = `Source: ${silver.source}`;
}



    function updateClientView() {
        const gold = metalsData.gold;
        const silver = metalsData.silver;

        const goldRate10g = gold.ratePerGram * 10;
        document.getElementById('clientGoldRate').textContent = gold.ratePerGram > 0 ? `₹ ${goldRate10g.toFixed(2)}` : '₹ 0.00';
        document.getElementById('clientGoldSource').textContent = `Source: ${gold.source}`;
        document.getElementById('clientGoldUpdated').textContent =
            gold.lastUpdated ? `Last updated: ${new Date(gold.lastUpdated).toLocaleString('en-IN')}` : 'Last updated: Never';

        const silverRate10g = silver.ratePerGram * 10;
        document.getElementById('clientSilverRate').textContent = silver.ratePerGram > 0 ? `₹ ${silverRate10g.toFixed(2)}` : '₹ 0.00';
        document.getElementById('clientSilverSource').textContent = `Source: ${silver.source}`;
        document.getElementById('clientSilverUpdated').textContent =
            silver.lastUpdated ? `Last updated: ${new Date(silver.lastUpdated).toLocaleString('en-IN')}` : 'Last updated: Never';
    }

    function showBootstrapAlert(elementId, message, type) {
        const element = document.getElementById(elementId);
        const alertClass = {
            danger: 'alert-danger',
            success: 'alert-success',
            info: 'alert-info',
            warning: 'alert-warning'
        }[type] || 'alert-warning';

        element.innerHTML = `
            <div class="alert ${alertClass} alert-dismissible fade show" role="alert">
                ${message}
                <button type="button" class="btn-close" data-bs-dismiss="alert" aria-label="Close"></button>
            </div>
        `;

        if (type === 'success') {
            setTimeout(() => {
                const alert = element.querySelector('.alert');
                if (alert && typeof bootstrap !== 'undefined') {
                    const bsAlert = new bootstrap.Alert(alert);
                    bsAlert.close();
                }
            }, 5000);
        }
    }

    document.addEventListener('change', function (e) {
        if (e.target.name === 'metalType') {
            const selectedMetal = e.target.value;
            const metalName = selectedMetal.charAt(0).toUpperCase() + selectedMetal.slice(1);
            document.getElementById('metalTypeLabel').textContent = metalName;
            document.getElementById('setButtonLabel').textContent = metalName;
        }
    });

    document.addEventListener('DOMContentLoaded', function () {
        updateWebsiteRates();
        updateClientView();
    });

    document.addEventListener('keydown', function (e) {
        if (e.key === 'Escape') {
            closeMetalsManager();
        }
    });
   
</script>
